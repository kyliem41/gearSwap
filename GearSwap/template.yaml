AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  GearSwap

  Sample SAM Template for GearSwap

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get

  # users
  createUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: createUser.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Layers:
      - arn:aws:lambda:us-east-2:637423330894:layer:psycopg2-layer:1
      Events:
        CreateUserApi:
          Type: Api
          Properties:
            Path: /users
            Method: post

  putUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: putUser.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Layers:
      - arn:aws:lambda:us-east-2:637423330894:layer:psycopg2-layer:1
      Events:
        PutUserApi:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: put

  getUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: getUser.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Layers:
      - arn:aws:lambda:us-east-2:637423330894:layer:psycopg2-layer:1
      Events:
        GetUserApi:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: get

  getUserFollowers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: getUserFollowers.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Layers:
      - arn:aws:lambda:us-east-2:637423330894:layer:psycopg2-layer:1
      Events:
        GetUserFollowersApi:
          Type: Api
          Properties:
            Path: /users/followers/{userId}
            Method: get

  getUserFollowing:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: getUserFollowing.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Layers:
      - arn:aws:lambda:us-east-2:637423330894:layer:psycopg2-layer:1
      Events:
        GetUserFollowingApi:
          Type: Api
          Properties:
            Path: /users/following/{userId}
            Method: get

  deleteUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: users/
      Handler: deleteUser.lambda_handler
      Runtime: python3.12
      Architectures:
      - x86_64
      Layers:
      - arn:aws:lambda:us-east-2:637423330894:layer:psycopg2-layer:1
      Events:
        DeleteUserApi:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: delete

  #login

  #posts

  #profile

  #cart

  #outfit

  #search

  #styler

  #interests

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
